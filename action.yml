name: 'powershell-gallery-publish'
description: 'Publish powershell script/module'
inputs:
  nugetapi-key:  
    description: 'Secret api key'
    required: true
    default: '***'
  payload-name:
    description: 'Name of payload'
    required: true
    default: 'payload'
  payload-type: 
    description: 'Type of payload'
    required: true
    default: 'module'
  payload-required-version:
    description: 'Version of payload'
    required: false 
  repository:
    description: 'Respository to pubish to' 
    required: true
    default: 'PSGallery' 
outputs:
  status: 
    description: 'Publish Status'
    value: ${{ steps.check-status.outputs.state }}
runs:
  using: "composite"
  steps: 
    if: ${{ inputs.payload-type }} == 'module'
    - id: publish-module
    - run: Publish-Module -Path ${{ GITHUB_WORKSPACE }} -Name ${{ inputs.payload-name }} -NuGetApiKey ${{ inputs.nugetapi-key }} -RequiredVersion ${{ inputs.payload-required-version }} -Respository ${{ inputs.repository }} -Force ; echo "::set-output name=service-state::$(echo $?)"
      shell: pwsh
    if: ${{ inputs.payload.type }} == 'script'
    - id: publish-script
    - run: Publish-Script -Path ${{ GITHUB_WORKSPACE }} -Name ${{ inputs.payload-name }} -NuGetApiKey ${{ inputs.nugetapi-key }} -Force ; echo "::set-output name=service-state::$(echo $?)"
      shell: pwsh   
    - id: check-status
      if: ${{ steps.publish-module }}
      run: echo "::set-output name=state::$(echo ${{ steps.publish-module.outputs.service-state }})"
      shell: bash
      if: ${{ steps.publish-script }}
      run: echo "::set-output name=state::$(echo ${{ steps.publish-script.outputs.service-state }})"
      shell: bash